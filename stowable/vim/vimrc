let mapleader="`"
source ~/.vim/plugins.vim

" General: {
    syntax on                         " Enable syntax highlighting
    filetype plugin indent on         " Automatically detect file types
    set background=dark               " Set colours according to dark background
    set backspace=indent,eol,start    " Backspace over everything in insert mode
    set history=1000                  " Number of lines in command history
    set autochdir                     " Automatically cd to directory of file being opened
    set nrformats="alpha,bin,hex"     " Let ^A^X in/decrease binary, hex or single letters
    set wildmenu                      " Enhance command-line completion
    set wildmode=list:longest,full

    " Bindings to make saving easier
    nnoremap <Leader>w :w<CR>
    nnoremap <silent> <Leader>W :w !sudo tee % > /dev/null<CR>:edit!<CR>
" }


" UI: {
    set title                         " Display filename in the terminal title
    set ruler                         " Display cursor position
    set number                        " Display line numbers
    set showcmd                       " Display command or visual selection info
    set showmatch                     " Show matching brackets on insert
    set cursorline                    " Highlight current line
    set laststatus=2                  " Always show the status line
    set splitbelow                    " Open new split below, not above
    set splitright                    " Open new vsplit to the right
    set scrolloff=10                  " Start scroll 10 lines away from top/bottom
" }


" Encoding: {
    set encoding=utf-8 nobomb         " Make sure display encoding is Unicode
    set fileencoding=utf-8            " Convert non-unicode files to UTF-8 on save
" }


" Search: {
    set hlsearch                      " Highlight search results
    set incsearch                     " Jump to result mid-search
    set ignorecase                    " Make searching case insensitive
    set smartcase                     " ...unless the query has capital letters

    " Set :grep command to use The Silver Searcher
    set grepprg="ag --nogroup --nocolor"

    " Make space clear highlighted search terms when pressed
    nnoremap <silent> <Leader><BS> :nohlsearch<Bar>:echo<CR>
"}


" Backups: {
    set nobackup                      " Disable creation of backup files
    set directory=~/.vim/swap//       " Place swapfiles away from projects
                                      "  ...but include full paths in the filenames (//)
    set undodir=~/.vim/undo//         " Same for persistent undo files
    set undofile                      "  ...which will work better if we turn it on
" }


" Formatting: {
    set list                          " Enable listchars
    set listchars=tab:▶▸,trail:·      " Make tabs and trailing spaces visible
    set expandtab                     " Insert spaces instead of tabs
    set tabstop=4                     " Width existing TAB characters are displayed as
    set softtabstop=4                 " Spaces added/removed by <TAB> and <BACKSPACE>
    set shiftwidth=4                  " Spaces shifted when using <<, == and >>
    set autoindent                    " Fallback to basic indents when filetype fails
    set nojoinspaces                  " Only insert one space when joining lines
    set formatoptions+=or             " Automatically add comment marker on next line
    set formatoptions+=j              " Automatically remove comment marker on line merge

    " Emulate "outdenting" shift-tab functionality of other editors
    nmap <S-Tab> <<
    imap <S-Tab> <C-o><<
" }


" Functions: {
    " Relative line numbers (`r)
    fun! NumberToggle()
        if(&relativenumber == 1)
            set nornu
            set nu
        else
            set rnu
        endif
    endfun
    nnoremap <Leader>r :call NumberToggle()<cr>

    " Strip trailing whitespace (`ss)
    fun! WhitespaceFixer()
        let l = line('.')
        let c = col('.')
        :%s/\s\+$//e
        call cursor(l, c)
    endfun
    noremap <leader>ss :call WhitespaceFixer()<CR>
" }
